name: "Verify"

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - master
      - develop
  schedule:
    - cron: '31 22 * * 5'

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3
  #React
  CI: "true"

jobs:
  code-ql:
    name: CodeQL
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java', 'javascript' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Maven Packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/
          key: m2-codeql-${{ hashFiles('**/pom.xml', '.mvn/*.xml') }}
          restore-keys: |
            m2-codeql
            m2
        if: matrix.language == 'java'

      - name: Cache Node Packages
        uses: actions/cache@v2
        with:
          path: |
            client/node_modules
          key: npm-codeql-${{ hashFiles('client/package.json') }}
          restore-keys: |
            npm-codeql
            npm
        if: matrix.language == 'javascript'


      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö https://git.io/JvXDl

      # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language

      #- run: |
      #   make bootstrap
      #   make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  server-test:
    name: Server Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Maven Packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/
          key: m2-${{ hashFiles('**/pom.xml', '.mvn/*.xml') }}
          restore-keys: m2

      - name: Build & Test
        run: |
          cd server;
          docker pull testcontainersofficial/ryuk:0.3.0;
          bash mvnw clean verify;


  client-test:
    name: Client Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache Node Packages
        uses: actions/cache@v2
        with:
          path: |
            client/node_modules
          key: npm-${{ hashFiles('client/package.json') }}
          restore-keys: npm

      - name: Build & Test
        run: |
          cd client;
          node -v;
          npm -v;
          npm clean-install;
          npm run build --if-present;
          npm test;

  docker-test:
    name: Docker Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Pull
        run: docker-compose -f docker-compose.yml pull

      - name: Build
        run: docker-compose -f docker-compose.yml build