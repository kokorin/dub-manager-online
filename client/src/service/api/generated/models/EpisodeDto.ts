/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EpisodeTitleDto,
    EpisodeTitleDtoFromJSON,
    EpisodeTitleDtoFromJSONTyped,
    EpisodeTitleDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface EpisodeDto
 */
export interface EpisodeDto {
    /**
     * 
     * @type {Date}
     * @memberof EpisodeDto
     */
    airDate: Date;
    /**
     * 
     * @type {number}
     * @memberof EpisodeDto
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof EpisodeDto
     */
    length: number;
    /**
     * 
     * @type {number}
     * @memberof EpisodeDto
     */
    number: number;
    /**
     * 
     * @type {Array<EpisodeTitleDto>}
     * @memberof EpisodeDto
     */
    titles: Array<EpisodeTitleDto>;
    /**
     * 
     * @type {string}
     * @memberof EpisodeDto
     */
    type: EpisodeDtoTypeEnum;
}

export function EpisodeDtoFromJSON(json: any): EpisodeDto {
    return EpisodeDtoFromJSONTyped(json, false);
}

export function EpisodeDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EpisodeDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'airDate': (new Date(json['airDate'])),
        'id': json['id'],
        'length': json['length'],
        'number': json['number'],
        'titles': ((json['titles'] as Array<any>).map(EpisodeTitleDtoFromJSON)),
        'type': json['type'],
    };
}

export function EpisodeDtoToJSON(value?: EpisodeDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'airDate': (value.airDate.toISOString().substr(0,10)),
        'id': value.id,
        'length': value.length,
        'number': value.number,
        'titles': ((value.titles as Array<any>).map(EpisodeTitleDtoToJSON)),
        'type': value.type,
    };
}

/**
* @export
* @enum {string}
*/
export enum EpisodeDtoTypeEnum {
    CREDIT = 'CREDIT',
    OTHER = 'OTHER',
    PARODY = 'PARODY',
    REGULAR = 'REGULAR',
    SPECIAL = 'SPECIAL',
    TRAILER = 'TRAILER'
}


